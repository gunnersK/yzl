<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd
                        http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
                        http://www.springframework.org/schema/cache
     					http://www.springframework.org/schema/cache/spring-cache.xsd">

	<!-- 加载classpath下的Redis配置文件 -->
	<context:property-placeholder location="classpath:*.properties"/>
     <!-- <context:property-placeholder location="classpath:redis.properties" /> -->
  
      <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxIdle" value="${redis.maxIdle}" />  
        <property name="maxTotal" value="${redis.maxTotal}" />  
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}" />  
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />  
        <property name="testWhileIdle" value="${redis.testWhileIdle}"></property>
    </bean>  
    
      <!--org.springframework.data.redis.connection.jedis.JedisConnectionFactory org.springframework.data.redis.connection.jedis.JedisConnectionFactory -->
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" destroy-method="destroy">
    	
    	<property name="poolConfig" ref="poolConfig"></property> 
		<!--IP地址 -->
		<property name="hostName" value="${redis.host}"></property> 
		<!--端口号  -->
		<property name="port" value="${redis.port}"></property> 
		<!--如果Redis设置有密码  -->
		<!-- <property name="password" value="${redis.password}" /> -->
		<!--客户端超时时间单位是毫秒  -->
		<property name="timeout" value="${redis.timeout}"></property>
    </bean> 
      
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"> <!-- org.springframework.data.redis.core.RedisTemplate org.springframework.data.redis.core.StringRedisTemplate -->
        <property name="connectionFactory"   ref="connectionFactory" />  
        <!--开启事务  -->
        <property name="enableTransactionSupport" value="true"></property>
        <!-- redis乱码问题 -->
        <property name="keySerializer">
        	<bean class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
        </property>
        <property name="valueSerializer">
              <bean
                  class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
         </property>
 
         <property name="hashKeySerializer">
             <bean
                 class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
         </property>
         <property name="hashValueSerializer">
             <bean
                 class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer" />
         </property>
         <property name="stringSerializer">
             <bean
                 class="org.springframework.data.redis.serializer.StringRedisSerializer" />
         </property>
    </bean>
    
    <!--自定义redis工具类,在需要缓存的地方注入此类  -->
    <bean id="redisUtils" class="com.yzl.LogService.RedisUtils">
    	<property name="redisTemplate" ref="redisTemplate"/>
    </bean>
    

</beans>